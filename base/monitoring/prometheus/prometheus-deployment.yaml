apiVersion: apps/v1
kind: Deployment

metadata:
  name: protector-prometheus
  labels:
    app: protector-prometheus

spec:
  replicas: 1
  selector:
    matchLabels:
      app: protector-prometheus

  template:
    metadata:
      name: protector-prometheus
      labels:
        app: protector-prometheus

    spec:
      serviceAccountName: protector-prometheus
      containers:
        - name: protector-prometheus
          image: prom/prometheus:v2.19.2
          imagePullPolicy: IfNotPresent
          args:
            - "--config.file=/config/prometheus.yml"
            - "--web.enable-lifecycle"
          ports:
              - containerPort: 9090
          volumeMounts:
              - name: prometheus-config
                mountPath: /config/
      volumes:
          - name: prometheus-config
            configMap:
              name: prometheus-configmap
      restartPolicy: Always
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: protector-prometheus
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: protector-prometheus-cluster-role
  labels:
    protector: back-end
rules:
  - apiGroups: [""]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: ["get", "list", "watch"]
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs: ["get", "list", "watch"]
  - nonResourceURLs: ["/metrics"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: protector-prometheus-role-binding
  labels:
    protector: back-end
subjects:
  - kind: ServiceAccount
    name: protector-prometheus
    namespace: default  # ✅ 이 줄 추가!
roleRef:
  kind: ClusterRole
  name: protector-prometheus-cluster-role
  apiGroup: rbac.authorization.k8s.io
